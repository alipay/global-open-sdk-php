<?php

namespace Request\notify;


class AlipayAuthNotify extends \Request\notify\AlipayNotify
{

    /**
     * Authorization notification type
     */
    public $authorizationNotifyType;

    /**
     * authClientId
     */
    public  $authClientId;

    /**
     * The access token that is used to access the corresponding scope of the user resource
     */
    public  $accessToken;

    /**
     * A string that is generated by the acquirer to represent the consult request
     */
    public  $authState;

    /**
     * The authorization code, used for getting an access token
     */
    public  $authCode;

    /**
     * The reason why the authorization is canceled
     */
    public  $reason;

    /**
     * The login ID that the user used to register in the wallet
     */
    public  $userLoginId;

    /**
     * The ID assigned by the payment method provider to identify a user
     */
    public  $userId;

    /**
     * @return mixed
     */
    public function getAuthorizationNotifyType()
    {
        return $this->authorizationNotifyType;
    }

    /**
     * @param mixed $authorizationNotifyType
     */
    public function setAuthorizationNotifyType($authorizationNotifyType)
    {
        $this->authorizationNotifyType = $authorizationNotifyType;
    }

    /**
     * @return mixed
     */
    public function getAuthClientId()
    {
        return $this->authClientId;
    }

    /**
     * @param mixed $authClientId
     */
    public function setAuthClientId($authClientId)
    {
        $this->authClientId = $authClientId;
    }

    /**
     * @return mixed
     */
    public function getAccessToken()
    {
        return $this->accessToken;
    }

    /**
     * @param mixed $accessToken
     */
    public function setAccessToken($accessToken)
    {
        $this->accessToken = $accessToken;
    }

    /**
     * @return mixed
     */
    public function getAuthState()
    {
        return $this->authState;
    }

    /**
     * @param mixed $authState
     */
    public function setAuthState($authState)
    {
        $this->authState = $authState;
    }

    /**
     * @return mixed
     */
    public function getAuthCode()
    {
        return $this->authCode;
    }

    /**
     * @param mixed $authCode
     */
    public function setAuthCode($authCode)
    {
        $this->authCode = $authCode;
    }

    /**
     * @return mixed
     */
    public function getReason()
    {
        return $this->reason;
    }

    /**
     * @param mixed $reason
     */
    public function setReason($reason)
    {
        $this->reason = $reason;
    }

    /**
     * @return mixed
     */
    public function getUserLoginId()
    {
        return $this->userLoginId;
    }

    /**
     * @param mixed $userLoginId
     */
    public function setUserLoginId($userLoginId)
    {
        $this->userLoginId = $userLoginId;
    }

    /**
     * @return mixed
     */
    public function getUserId()
    {
        return $this->userId;
    }

    /**
     * @param mixed $userId
     */
    public function setUserId($userId)
    {
        $this->userId = $userId;
    }





}